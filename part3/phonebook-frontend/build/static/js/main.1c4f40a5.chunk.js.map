{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/functions.js","components/Message.js","App.js","index.js"],"names":["Persons","persons","handleDelete","map","person","key","name","number","onClick","Filter","useState","search","setNameSearch","searchByName","setSearchByName","value","onChange","event","target","filtered","filter","toLowerCase","startsWith","PersonForm","props","addPeson","newName","newNumber","handleOnChangeName","handleOnChangeNumber","onSubmit","type","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Message","successMessage","confirmationMessage","className","App","setPersons","setNewName","setNewNumber","setSuccessMessage","setConfirmationMessage","useEffect","contacts","initialContacts","preventDefault","nameObject","length","find","peson","window","confirm","updatePerson","newContacts","setTimeout","catch","error","concat","console","log","pre","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c4f40a5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Persons = ({ persons, handleDelete }) => {\n    return (\n        <div>\n            {persons.map(person => {\n                return (\n                    <p key={person.name}>{person.name} {person.number} <button onClick={() => handleDelete(person)}>delete</button></p>\n                    )\n                    \n            }\n            )}\n        </div>\n    )\n}\n\nexport default Persons\n","import React, { useState } from 'react'\n\nconst Filter = ({ persons }) => {\n    const [search, setNameSearch] = useState('')\n    const [searchByName, setSearchByName] = useState([{}])\n\n    const handleOnChangeSearch = (event) => {\n        setNameSearch(event.target.value)\n        const filtered = persons.filter(person => person.name.toLowerCase().startsWith(search.toLowerCase()))\n        setSearchByName(filtered)\n    }\n    \n    \n    return (\n        <div>\n            Filter shown with: <input value={search}\n                onChange={handleOnChangeSearch} />\n           {(search) ? searchByName.map(person => {\n                return (\n                    <p key={person.name}>{person.name} {person.number}</p>\n                )\n            }):null}\n        </div>\n    )\n}\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n    const {addPeson, newName, newNumber, handleOnChangeName, handleOnChangeNumber}= props\n    return (\n        <form onSubmit={addPeson}>\n            <div>\n                Name: <input value={newName}\n                    onChange={handleOnChangeName} />\n            </div>\n            <div>\n                Number: <input value={newNumber}\n                    onChange={handleOnChangeNumber} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getContacts = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getContacts, create, update, remove }","\nimport React from 'react'\n\nconst Message = ({ successMessage, confirmationMessage}) => {\n    if (successMessage === confirmationMessage)\n    return (\n        <divi></divi>\n    )\n    if (successMessage) return (<div className=\"success\">{successMessage}</div>)\n           else return (<div className=\"notify\">{confirmationMessage}</div>)\n}\nexport default Message","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport contacts from './services/functions'\nimport Message from './components/Message'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])  \n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [successMessage, setSuccessMessage] = useState(null)\n    const [confirmationMessage, setConfirmationMessage] = useState(null)\n    \n    const handleOnChangeName = (event) => {\n    setNewName(event.target.value)\n}\n\n    const handleOnChangeNumber = (event) => {\n    setNewNumber(event.target.value)\n}\n\n    useEffect(() => {\n        contacts\n            .getContacts()\n            .then(initialContacts => {\n                setPersons(initialContacts)\n            })\n    }, [])\n\n    const addPeson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n        name: newName,\n        number: newNumber,\n        id:persons.length+1\n    }\n\n    if (persons.find(peson => peson.name === newName)){\n        if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n            const replaceNumber = persons.filter(person => person.name === newName)\n            let updatePerson = replaceNumber[0]\n            updatePerson.number = newNumber\n            contacts.update(updatePerson.id, updatePerson)\n                .then(newContacts => {\n                setPersons(persons.map(person => person.id !== updatePerson.id ? person : newContacts))\n                setSuccessMessage(`Updated ${newContacts.name}'s number`)\n                setTimeout(() => {\n                    setSuccessMessage(null)\n                }, 5000)\n            })\n            .catch(error => {\n                    setConfirmationMessage(error.response.data.error)\n                    setTimeout(() => {setConfirmationMessage(null)}, 5000)\n            })\n    }\n}\n    else\n    {\n        setPersons(persons.concat(nameObject))\n        contacts.create(nameObject)\n        .catch(error => {\n            console.log('print error');\n            setConfirmationMessage(error.response.data.error)\n            setTimeout(() => {\n                setConfirmationMessage(null)\n            }, 5000)\n            })\n            if(nameObject.name.length>2 && nameObject.number.length>7)   {\n                setSuccessMessage(`Added ${newName}`)\n                setTimeout(() => { setSuccessMessage(null) }, 5000)\n            }     \n    }\n   \n}\n   \n    const handleDelete = (person) => {\n    if (window.confirm(`Delete ${person.name}`)) {\n            contacts.remove(person.id)\n                .then(response =>{\n                    setConfirmationMessage(`Information of ${person.name} has already been removed from the server`)\n                    setTimeout(() => {\n                        setConfirmationMessage(null)\n                    }, 5000)\n                })\n            const filtered = persons.filter(pre => pre.id !== person.id)\n            setPersons(filtered)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Message successMessage={successMessage} confirmationMessage={confirmationMessage} />\n            <br/>\n            <Filter persons ={persons}/>\n\n            <h3>Add a new user</h3>\n\n            <PersonForm addPeson={addPeson}\n                        newName = {newName}\n                        newNumber={newNumber}\n                        handleOnChangeName={handleOnChangeName}\n                        handleOnChangeNumber={handleOnChangeNumber}\n                        />\n\n            <h2>Numbers</h2>\n\n            <Persons persons={persons} handleDelete={handleDelete} />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}